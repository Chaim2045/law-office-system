rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // ==================== Helper Functions ====================

    // Check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Check if user is admin
    function isAdmin() {
      return request.auth != null && (
        request.auth.token.role == 'admin' ||
        request.auth.token.email == 'haim@ghlawoffice.co.il'
      );
    }

    // ==================== Collections ====================

    // ✅ Employees: All authenticated users can read all employees
    // Note: Client-side filtering shows only relevant data to regular users
    // Admins can see everyone through admin dashboard
    match /employees/{employeeId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only through Cloud Functions
    }

    // ✅ Clients: Read-only access for authenticated users
    // Note: Client-side filtering handled by application logic
    // Future: Implement fine-grained access control with custom claims
    match /clients/{clientId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only through Cloud Functions
    }

    // ✅ Cases: Read-only access for authenticated users
    // Note: Client-side filtering handled by application logic
    // Future: Add assignedTo array-contains check for fine-grained access
    match /cases/{caseId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only through Cloud Functions
    }

    // ✅ Tasks: User can read only their own tasks
    // Note: Filtering by employee email
    match /tasks/{taskId} {
      allow read: if isAuthenticated() &&
                     resource.data.employee == request.auth.token.email;
      allow write: if false; // Only through Cloud Functions
    }

    // ✅ Budget Tasks: User can read only their own tasks (by EMAIL), admins can read all
    match /budget_tasks/{taskId} {
      allow read: if isAuthenticated() && (
                     resource.data.employee == request.auth.token.email ||
                     isAdmin()
                  );
      allow write: if false; // Only through Cloud Functions
    }

    // ✅ Timesheet Entries: User can read only their own entries (by EMAIL), admins can read all
    match /timesheet_entries/{entryId} {
      allow read: if isAuthenticated() && (
                     resource.data.employee == request.auth.token.email ||
                     isAdmin()
                  );
      allow write: if false; // Only through Cloud Functions
    }

    // ✅ Activity Log: User can read their own, admins can read all
    match /activity_log/{logId} {
      allow read: if isAuthenticated() && (
        resource.data.performedBy == request.auth.token.email ||
        isAdmin()
      );
      allow write: if false; // Only through Cloud Functions
    }

    // ✅ Audit Log: Read-only for authenticated users
    // Note: Sensitive operations logged server-side only
    // Future: Restrict to admin-only with custom claims
    match /audit_log/{logId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only through Cloud Functions
    }

    // ✅ System Settings: Read-only for authenticated users
    // Note: Only admins can modify through Cloud Functions
    match /system_settings/{settingId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only through Cloud Functions
    }

    // ✅ User Tracking: Read own tracking data only
    match /user_tracking/{trackingId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only through Cloud Functions
    }

    // ✅ Sessions: Admin dashboard tracking (authenticated admins only)
    // TODO: Replace with Realtime DB Presence in the future
    match /sessions/{sessionId} {
      allow read, write: if isAuthenticated();
    }

    // ❌ Default: Deny all other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
